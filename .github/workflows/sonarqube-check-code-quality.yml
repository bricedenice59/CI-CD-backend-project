name: Sonarqube-code-quality-scan

on:
  workflow_run:
    workflows: ["Build-test"]
    types:
      - completed

jobs:
  build:
    name: sonarqube quality check
    runs-on: ubuntu-latest

    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'pull_request' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache SonarQube packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
            path: ~/.m2
            key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
            restore-keys: ${{ runner.os }}-m2

      - name: Install dependencies without performing any test check
        run: mvn clean install -DskipTests

      - name: Sonarqube scan
        uses: sonarsource/sonarqube-scan-action@master
        with:
            projectBaseDir: .
            args: >
              -Dsonar.projectKey=P10_backend
        env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Create artifact for SonarQube Report
        uses: actions/upload-artifact@v4
        with:
            name: SonarQube Report
            path: .scannerwork/report-task.txt

      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      - name: Sonarqube Quality gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}